{
  "type": "sorter",
  "version": 1,
  "world": "malloc",
  "name": "component",
  "order": {
    "preset1": [
      "tc-webcore-fontcache",
      "tc-skia",
      "tc-renderstyle",
      "tc-webcore-sharedbuf",
      "tc-webcore-XHRcreate",
      "tc-webcore-XHRreceived",
      "tc-webcore-docwriter-add",
      "tc-webcore-node-and-doc",
      "tc-webcore-node-factory",
      "tc-webcore-element-wrapper",
      "tc-webcore-stylepropertyset",
      "tc-webcore-style-createsheet",
      "tc-webcore-resource",
      "tc-webcore-script-execute",
      "tc-webcore-events-related",
      "tc-webcore-document-write",
      "tc-webcore-element-create-renderer",
      "tc-webcore-render-catch-all",
      "tc-webcore-setInnerHTML-except-node",
      "tc-wtf-StringImpl-user-catch-all",
      "tc-wtf-HashTable-user-catch-all",
      "tc-webcore-everything-create",
      "tc-webkit-from-v8-catch-all",
      "tc-webkit-catch-all",
      "tc-v8-catch-all",
      "tc-toplevel-string",
      "tc-std-treemap",
      "tc-std-hashmap",
      "tc-std-vector",
      "tc-std-other",
      "tc-catch-all",
      "tc-unused"
    ]
  },
  "rules": [
    {
      "name": "tc-webcore-fontcache",
      "backtrace_function": ".*(WebCore|blink)::FontCache::getCachedFontData.*"
    },
    {
      "name": "tc-skia",
      "backtrace_function": ".* Sk[A-Za-z_]+::.*"
    },
    {
      "name": "tc-renderstyle",
      "backtrace_function": ".*(WebCore|blink)::RenderStyle::create.*"
    },
    {
      "name": "tc-renderstyle",
      "backtrace_function": ".*(WebCore|blink)::RenderStyle::clone.*"
    },
    {
      "name": "tc-webcore-sharedbuf",
      "backtrace_function": ".*(WebCore|blink)::SharedBuffer::create.*"
    },
    {
      "name": "tc-webcore-sharedbuf",
      "backtrace_function": ".*(WebCore|blink)::SharedBuffer::buffer.*"
    },
    {
      "name": "tc-webcore-sharedbuf",
      "backtrace_function": ".*(WebCore|blink)::SharedBuffer::append.*"
    },
    {
      "name": "tc-webcore-XHRcreate",
      "backtrace_function": ".*(WebCore|blink)::XMLHttpRequest::create .*"
    },
    {
      "name": "tc-webcore-XHRreceived",
      "backtrace_function": ".*(WebCore|blink)::XMLHttpRequest::didReceiveData.*"
    },
    {
      "name": "tc-webcore-docwriter-add",
      "backtrace_function": ".*(WebCore|blink)::DocumentWriter::addData.*"
    },
    {
      "name": "tc-webcore-node-and-doc",
      "backtrace_function": ".*(WebCore|blink)::HTML[a-zA-Z0-9_]*Element::create .*"
    },
    {
      "name": "tc-webcore-node-and-doc",
      "backtrace_function": ".*(WebCore|blink)::Text::create .*"
    },
    {
      "name": "tc-webcore-node-and-doc",
      "backtrace_function": ".*(WebCore|blink)::Comment::create .*"
    },
    {
      "name": "tc-webcore-node-and-doc",
      "backtrace_function": ".*(WebCore|blink)::HTMLDocument::create .*"
    },
    {
      "name": "tc-webcore-node-and-doc",
      "backtrace_function": ".*(WebCore|blink)::CSSStyleRule::create .*"
    },
    {
      "name": "tc-webcore-node-and-doc",
      "backtrace_function": ".*(WebCore|blink)::Attribute::create .*"
    },
    {
      "name": "tc-webcore-node-and-doc",
      "backtrace_function": ".*(WebCore|blink)::DOMWindow::create .*"
    },
    {
      "name": "tc-webcore-node-factory",
      "backtrace_function": ".*(WebCore|blink)::HTML[a-zA-Z0-9_]*Factory::create[a-zA-Z0-9_]*Element.*"
    },
    {
      "name": "tc-webcore-element-wrapper",
      "backtrace_function": ".*(WebCore|blink)::createHTML[a-zA-Z0-9_]*ElementWrapper.*"
    },
    {
      "name": "tc-webcore-stylepropertyset",
      "backtrace_function": ".*(WebCore|blink)::StylePropertySet::create .*"
    },
    {
      "name": "tc-webcore-style-createsheet",
      "backtrace_function": ".*(WebCore|blink)::StyleElement::createSheet.*"
    },
    {
      "name": "tc-webcore-resource",
      "backtrace_function": ".*(WebCore|blink)::ResourceFetcher::requestResource .*"
    },
    {
      "name": "tc-webcore-script-execute",
      "backtrace_function": ".*(WebCore|blink)::ScriptLoader::execute.*"
    },
    {
      "name": "tc-webcore-events-related",
      "backtrace_function": ".*(WebCore|blink)::createAttributeEventListener.*"
    },
    {
      "name": "tc-webcore-events-related",
      "backtrace_function": ".*(WebCore|blink)::V8LazyEventListener::create.*"
    },
    {
      "name": "tc-webcore-events-related",
      "backtrace_function": ".*(WebCore|blink)::V8EventListener::create.*"
    },
    {
      "name": "tc-webcore-events-related",
      "backtrace_function": ".*(WebCore|blink)::Event::create .*"
    },
    {
      "name": "tc-webcore-events-related",
      "backtrace_function": ".*(WebCore|blink)::EventListener::create .*"
    },
    {
      "name": "tc-webcore-document-write",
      "backtrace_function": ".*(WebCore|blink)::Document::write.*"
    },
    {
      "name": "tc-webcore-element-create-renderer",
      "stacktrace": ".*(WebCore|blink)::[a-zA-Z0-9_]*Element::createRenderer .*",
      "allocator": "malloc"
    },
    {
      "name": "tc-webcore-render-catch-all",
      "backtrace_function": ".*(WebCore|blink)::RenderLayer.*"
    },
    {
      "name": "tc-webcore-render-catch-all",
      "backtrace_function": ".*(WebCore|blink)::RenderBlock.*"
    },
    {
      "name": "tc-webcore-render-catch-all",
      "backtrace_function": ".*(WebCore|blink)::RenderWidget.*"
    },
    {
      "name": "tc-webcore-render-catch-all",
      "backtrace_function": ".*(WebCore|blink)::RenderView.*"
    },
    {
      "name": "tc-webcore-render-catch-all",
      "backtrace_function": ".*(WebCore|blink)::RenderViewImpl.*"
    },
    {
      "name": "tc-webcore-render-catch-all",
      "backtrace_function": ".*(WebCore|blink)::RenderStyle.*"
    },
    {
      "name": "tc-webcore-render-catch-all",
      "backtrace_function": ".*(WebCore|blink)::RenderText.*"
    },
    {
      "name": "tc-webcore-render-catch-all",
      "backtrace_function": ".* RendererMain .*"
    },
    {
      "name": "tc-webcore-setInnerHTML-except-node",
      "backtrace_function": ".*(WebCore|blink)::Element::setInnerHTML.*"
    },
    {
      "name": "tc-wtf-StringImpl-user-catch-all",
      "backtrace_function": ".*WTF::StringImpl::create .*"
    },
    {
      "name": "tc-wtf-StringImpl-user-catch-all",
      "backtrace_function": ".*WTF::StringImpl::createUninitialized.*"
    },
    {
      "name": "tc-wtf-HashTable-user-catch-all",
      "backtrace_function": ".*WTF::HashTable::allocateTable.*"
    },
    {
      "name": "tc-webcore-everything-create",
      "backtrace_function": ".*(WebCore|blink)::[a-zA-Z0-9_]*::create .*"
    },
    {
      "name": "tc-webkit-from-v8-catch-all",
      "backtrace_function": ".*(WTF::|WebCore::|blink::|WebKit::).*v8::.*"
    },
    {
      "name": "tc-webkit-catch-all",
      "backtrace_function": ".*(WTF::|WebCore::|blink::|WebKit::).*"
    },
    {
      "name": "tc-v8-catch-all",
      "backtrace_function": ".*v8::.*"
    },
    {
      "name": "tc-toplevel-string",
      "backtrace_function": ".*::allocate std::basic_string::_Rep::_S_create.*"
    },
    {
      "name": "tc-std-treemap",
      "backtrace_function": ".*::allocate std::(_Rb_tree|__1::__tree).*"
    },
    {
      "name": "tc-std-hashmap",
      "backtrace_function": ".*(std::vector::reserve __gnu_cxx::hashtable|::allocate std::_Hashtable|::allocate std::__1::__hash_table).*"
    },
    {
      "name": "tc-std-vector",
      "backtrace_function": ".*std::(_Vector_base::_M_allocate|__1::vector::allocate).*"
    },
    {
      "name": "tc-std-other",
      "backtrace_function": ".*(__gnu_cxx::new_allocator::allocate|std::__1::allocator::allocate).*"
    },
    {
      "name": "tc-catch-all",
      "backtrace_function": ".*"
    }
  ]
}
