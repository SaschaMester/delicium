{
  "components": [
    "second",
    "mmap-profiler",
    "mmap-type-profiler",
    "mmap-tcmalloc",
    "FROM_HERE_FOR_TOTAL",
    "mustbezero",
    "unhooked-absent",
    "unhooked-ashmem-dalvik-heap",
    "unhooked-ashmem-dalvik-LinearAlloc",
    "unhooked-ashmem-dalvik-aux-structure",
    "unhooked-ashmem-dalvik-bitmap",
    "unhooked-ashmem-dalvik-other",
    "unhooked-kgsl",
    "unhooked-pvrsrvkm",
    "unhooked-system-dex",
    "unhooked-chrome-dex",
    "unhooked-other-ashmem",
    "unhooked-anonymous",
    "unhooked-file-exec-lib-chrome-shared",
    "unhooked-file-exec-lib-chrome-private",
    "unhooked-file-exec",
    "unhooked-file-nonexec-lib-chrome-shared",
    "unhooked-file-nonexec-lib-chrome-private",
    "unhooked-file-nonexec",
    "unhooked-stack",
    "unhooked-other",
    "no-bucket",
    "mmap-v8-heap-newspace",
    "mmap-v8-heap-coderange",
    "mmap-v8-heap-pagedspace",
    "mmap-v8-other",
    "mmap-gpu-mappedmemorymanager",
    "mmap-gpu-command-ringbuffer",
    "mmap-gpu-transfer-ringbuffer",
    "mmap-gpu-gles2-createbuffer",
    "mmap-skia-font",
    "mmap-catch-all",
    "tc-webcore-fontcache",
    "tc-skia",
    "tc-renderstyle",
    "tc-webcore-sharedbuf",
    "tc-webcore-XHRcreate",
    "tc-webcore-XHRreceived",
    "tc-webcore-docwriter-add",
    "tc-webcore-node-and-doc",
    "tc-webcore-node-factory",
    "tc-webcore-element-wrapper",
    "tc-webcore-stylepropertyset",
    "tc-webcore-style-createsheet",
    "tc-webcore-resource",
    "tc-webcore-script-execute",
    "tc-webcore-events-related",
    "tc-webcore-document-write",
    "tc-webcore-element-create-renderer",
    "tc-webcore-image-frame-generator",
    "tc-webcore-render-catch-all",
    "tc-webcore-setInnerHTML-except-node",
    "tc-wtf-StringImpl-user-catch-all",
    "tc-wtf-HashTable-user-catch-all",
    "tc-webcore-everything-create",
    "tc-webkit-from-v8-catch-all",
    "tc-webkit-catch-all",
    "tc-v8-catch-all",
    "tc-stl-string",
    "tc-stl-rbtree",
    "tc-stl-vector",
    "tc-stl-hashtable",
    "tc-stl-other",
    "tc-catch-all",
    "tc-unused",
    "UNTIL_HERE_FOR_TOTAL",
    "total-exclude-profiler",
    "total",
    "absent",
    "anonymous",
    "file-exec",
    "file-nonexec",
    "stack",
    "other",
    "mmap-total-log",
    "mmap-no-log",
    "mmap-total-record",
    "other-total-log",
    "tc-total-log",
    "tc-no-log",
    "tc-total-record",
    "tc-total"
  ],
  "rules": [
    {
      "name": "second",
      "stacktrace": "optional",
      "allocator": "optional"
    },
    {
      "name": "mmap-profiler",
      "stacktrace": ".*(ProfilerMalloc|MemoryRegionMap::).*",
      "allocator": "mmap"
    },
    {
      "name": "mmap-type-profiler",
      "stacktrace": ".*(TypeProfilerMalloc).*",
      "allocator": "mmap"
    },
    {
      "name": "mmap-tcmalloc",
      "stacktrace": ".*(DoAllocWithArena|SbrkSysAllocator::Alloc|MmapSysAllocator::Alloc|LowLevelAlloc::Alloc|LowLevelAlloc::AllocWithArena).*",
      "allocator": "mmap"
    },
    {
      "name": "FROM_HERE_FOR_TOTAL",
      "stacktrace": "optional",
      "allocator": "optional"
    },
    {
      "name": "mustbezero",
      "stacktrace": "optional",
      "allocator": "optional"
    },
    {
      "name": "unhooked-absent",
      "stacktrace": "optional",
      "allocator": "optional"
    },
    {
      "name": "unhooked-ashmem-dalvik-heap",
      "mappedpathname": "/dev/ashmem/dalvik-heap.*",
      "allocator": "unhooked"
    },
    {
      "name": "unhooked-ashmem-dalvik-LinearAlloc",
      "mappedpathname": "/dev/ashmem/dalvik-LinearAlloc.*",
      "allocator": "unhooked"
    },
    {
      "name": "unhooked-ashmem-dalvik-aux-structure",
      "mappedpathname": "/dev/ashmem/dalvik-aux-structure.*",
      "allocator": "unhooked"
    },
    {
      "name": "unhooked-ashmem-dalvik-bitmap",
      "mappedpathname": "/dev/ashmem/dalvik-bitmap.*",
      "allocator": "unhooked"
    },
    {
      "name": "unhooked-ashmem-dalvik-other",
      "mappedpathname": "/dev/ashmem/dalvik.*",
      "allocator": "unhooked"
    },
    {
      "name": "unhooked-kgsl",
      "mappedpathname": "/dev/kgsl-3d0",
      "allocator": "unhooked"
    },
    {
      "name": "unhooked-pvrsrvkm",
      "mappedpathname": "/dev/pvrsrvkm.*",
      "allocator": "unhooked"
    },
    {
      "name": "unhooked-system-dex",
      "mappedpathname": "/data/dalvik-cache/system.*.dex.*",
      "allocator": "unhooked"
    },
    {
      "name": "unhooked-chrome-dex",
      "mappedpathname": "^/.*?(chrome|content).*?apk@classes.dex",
      "allocator": "unhooked"
    },
    {
      "name": "unhooked-other-ashmem",
      "mappedpathname": "/dev/ashmem/.*",
      "allocator": "unhooked"
    },
    {
      "name": "unhooked-anonymous",
      "mappedpathname": "^$",
      "allocator": "unhooked"
    },
    {
      "name": "unhooked-file-exec-lib-chrome-shared",
      "mappedpathname": "^/.*?(chromeview|content).*",
      "mappedpermission": "..x.",
      "allocator": "unhooked",
      "sharedwith": ["group", "others"]
    },
    {
      "name": "unhooked-file-exec-lib-chrome-private",
      "mappedpathname": "^/.*?(chromeview|content).*",
      "mappedpermission": "..x.",
      "allocator": "unhooked",
      "sharedwith": ["private"]
    },
    {
      "name": "unhooked-file-exec",
      "mappedpathname": "^/.*",
      "mappedpermission": "..x.",
      "allocator": "unhooked"
    },
    {
      "name": "unhooked-file-nonexec-lib-chrome-shared",
      "mappedpathname": "^/.*?(chromeview|content).*",
      "allocator": "unhooked",
      "sharedwith": ["group", "others"]
    },
    {
      "name": "unhooked-file-nonexec-lib-chrome-private",
      "mappedpathname": "^/.*?(chromeview|content).*",
      "allocator": "unhooked",
      "sharedwith": ["private"]
    },
    {
      "name": "unhooked-file-nonexec",
      "mappedpathname": "^/.*",
      "allocator": "unhooked"
    },
    {
      "name": "unhooked-stack",
      "mappedpathname": ".stack.",
      "allocator": "unhooked"
    },
    {
      "name": "unhooked-other",
      "mappedpathname": ".*",
      "allocator": "unhooked"
    },
    {
      "name": "mmap-v8-heap-newspace",
      "stacktrace": ".*v8::internal::NewSpace::SetUp.*",
      "allocator": "mmap"
    },
    {
      "name": "mmap-v8-heap-coderange",
      "stacktrace": ".*v8::internal::CodeRange::SetUp.*",
      "allocator": "mmap"
    },
    {
      "name": "mmap-v8-heap-pagedspace",
      "stacktrace": ".*v8::internal::PagedSpace::AllocateRaw.*",
      "allocator": "mmap"
    },
    {
      "name": "mmap-v8-other",
      "stacktrace": ".*v8::.*",
      "allocator": "mmap"
    },
    {
      "name": "mmap-gpu-mappedmemorymanager",
      "stacktrace": ".*gpu::MappedMemoryManager::Alloc.*",
      "allocator": "mmap"
    },
    {
      "name": "mmap-gpu-command-ringbuffer",
      "stacktrace": ".*gpu::CommandBufferHelper::AllocateRingBuffer.*",
      "allocator": "mmap"
    },
    {
      "name": "mmap-gpu-transfer-ringbuffer",
      "stacktrace": ".*gpu::TransferBuffer::AllocateRingBuffer.*",
      "allocator": "mmap"
    },
    {
      "name": "mmap-gpu-gles2-createbuffer",
      "stacktrace": ".*gpu::gles2::BufferTracker::CreateBuffer.*",
      "allocator": "mmap"
    },
    {
      "name": "mmap-skia-font",
      "stacktrace": ".*SkTypeface::openStream.*",
      "allocator": "mmap"
    },
    {
      "name": "mmap-catch-all",
      "stacktrace": ".*",
      "allocator": "mmap"
    },
    {
      "name": "tc-webcore-fontcache",
      "stacktrace": ".*(WebCore|blink)::FontCache::getCachedFontData.*",
      "allocator": "malloc"
    },
    {
      "name": "tc-skia",
      "stacktrace": ".* Sk[A-Za-z_]+::.*",
      "allocator": "malloc"
    },
    {
      "name": "tc-renderstyle",
      "stacktrace": ".*(WebCore|blink)::RenderStyle::create.*",
      "allocator": "malloc"
    },
    {
      "name": "tc-renderstyle",
      "stacktrace": ".*(WebCore|blink)::RenderStyle::clone.*",
      "allocator": "malloc"
    },
    {
      "name": "tc-webcore-sharedbuf",
      "stacktrace": ".*(WebCore|blink)::SharedBuffer::create.*",
      "allocator": "malloc"
    },
    {
      "name": "tc-webcore-sharedbuf",
      "stacktrace": ".*(WebCore|blink)::SharedBuffer::buffer.*",
      "allocator": "malloc"
    },
    {
      "name": "tc-webcore-sharedbuf",
      "stacktrace": ".*(WebCore|blink)::SharedBuffer::append.*",
      "allocator": "malloc"
    },
    {
      "name": "tc-webcore-XHRcreate",
      "stacktrace": ".*(WebCore|blink)::XMLHttpRequest::create .*",
      "allocator": "malloc"
    },
    {
      "name": "tc-webcore-XHRreceived",
      "stacktrace": ".*(WebCore|blink)::XMLHttpRequest::didReceiveData.*",
      "allocator": "malloc"
    },
    {
      "name": "tc-webcore-docwriter-add",
      "stacktrace": ".*(WebCore|blink)::DocumentWriter::addData.*",
      "allocator": "malloc"
    },
    {
      "name": "tc-webcore-node-and-doc",
      "stacktrace": ".*(WebCore|blink)::HTML[a-zA-Z0-9_]*Element::create .*",
      "allocator": "malloc"
    },
    {
      "name": "tc-webcore-node-and-doc",
      "stacktrace": ".*(WebCore|blink)::Text::create .*",
      "allocator": "malloc"
    },
    {
      "name": "tc-webcore-node-and-doc",
      "stacktrace": ".*(WebCore|blink)::Comment::create .*",
      "allocator": "malloc"
    },
    {
      "name": "tc-webcore-node-and-doc",
      "stacktrace": ".*(WebCore|blink)::HTMLDocument::create .*",
      "allocator": "malloc"
    },
    {
      "name": "tc-webcore-node-and-doc",
      "stacktrace": ".*(WebCore|blink)::CSSStyleRule::create .*",
      "allocator": "malloc"
    },
    {
      "name": "tc-webcore-node-and-doc",
      "stacktrace": ".*(WebCore|blink)::Attribute::create .*",
      "allocator": "malloc"
    },
    {
      "name": "tc-webcore-node-and-doc",
      "stacktrace": ".*(WebCore|blink)::DOMWindow::create .*",
      "allocator": "malloc"
    },
    {
      "name": "tc-webcore-node-factory",
      "stacktrace": ".*(WebCore|blink)::HTML[a-zA-Z0-9_]*Factory::create[a-zA-Z0-9_]*Element.*",
      "allocator": "malloc"
    },
    {
      "name": "tc-webcore-element-wrapper",
      "stacktrace": ".*(WebCore|blink)::createHTML[a-zA-Z0-9_]*ElementWrapper.*",
      "allocator": "malloc"
    },
    {
      "name": "tc-webcore-stylepropertyset",
      "stacktrace": ".*(WebCore|blink)::StylePropertySet::create .*",
      "allocator": "malloc"
    },
    {
      "name": "tc-webcore-style-createsheet",
      "stacktrace": ".*(WebCore|blink)::StyleElement::createSheet.*",
      "allocator": "malloc"
    },
    {
      "name": "tc-webcore-resource",
      "stacktrace": ".*(WebCore|blink)::ResourceFetcher::requestResource .*",
      "allocator": "malloc"
    },
    {
      "name": "tc-webcore-script-execute",
      "stacktrace": ".*(WebCore|blink)::ScriptLoader::execute.*",
      "allocator": "malloc"
    },
    {
      "name": "tc-webcore-events-related",
      "stacktrace": ".*(WebCore|blink)::createAttributeEventListener.*",
      "allocator": "malloc"
    },
    {
      "name": "tc-webcore-events-related",
      "stacktrace": ".*(WebCore|blink)::V8LazyEventListener::create.*",
      "allocator": "malloc"
    },
    {
      "name": "tc-webcore-events-related",
      "stacktrace": ".*(WebCore|blink)::V8EventListener::create.*",
      "allocator": "malloc"
    },
    {
      "name": "tc-webcore-events-related",
      "stacktrace": ".*(WebCore|blink)::Event::create .*",
      "allocator": "malloc"
    },
    {
      "name": "tc-webcore-events-related",
      "stacktrace": ".*(WebCore|blink)::EventListener::create .*",
      "allocator": "malloc"
    },
    {
      "name": "tc-webcore-document-write",
      "stacktrace": ".*(WebCore|blink)::Document::write.*",
      "allocator": "malloc"
    },
    {
      "name": "tc-webcore-element-create-renderer",
      "stacktrace": ".*(WebCore|blink)::[a-zA-Z0-9_]*Element::createRenderer .*",
      "allocator": "malloc"
    },
    {
      "name": "tc-webcore-image-frame-generator",
      "stacktrace": ".*(WebCore|blink)::ImageFrameGenerator.*",
      "allocator": "malloc"
    },
    {
      "name": "tc-webcore-render-catch-all",
      "stacktrace": ".*(WebCore|blink)::RenderLayer.*",
      "allocator": "malloc"
    },
    {
      "name": "tc-webcore-render-catch-all",
      "stacktrace": ".*(WebCore|blink)::RenderBlock.*",
      "allocator": "malloc"
    },
    {
      "name": "tc-webcore-render-catch-all",
      "stacktrace": ".*(WebCore|blink)::RenderWidget.*",
      "allocator": "malloc"
    },
    {
      "name": "tc-webcore-render-catch-all",
      "stacktrace": ".*(WebCore|blink)::RenderView.*",
      "allocator": "malloc"
    },
    {
      "name": "tc-webcore-render-catch-all",
      "stacktrace": ".*(WebCore|blink)::RenderViewImpl.*",
      "allocator": "malloc"
    },
    {
      "name": "tc-webcore-render-catch-all",
      "stacktrace": ".*(WebCore|blink)::RenderStyle.*",
      "allocator": "malloc"
    },
    {
      "name": "tc-webcore-render-catch-all",
      "stacktrace": ".*(WebCore|blink)::RenderText.*",
      "allocator": "malloc"
    },
    {
      "name": "tc-webcore-render-catch-all",
      "stacktrace": ".* RendererMain .*",
      "allocator": "malloc"
    },
    {
      "name": "tc-webcore-setInnerHTML-except-node",
      "stacktrace": ".*(WebCore|blink)::Element::setInnerHTML.*",
      "allocator": "malloc"
    },
    {
      "name": "tc-wtf-StringImpl-user-catch-all",
      "stacktrace": ".*WTF::StringImpl::create .*",
      "allocator": "malloc"
    },
    {
      "name": "tc-wtf-StringImpl-user-catch-all",
      "stacktrace": ".*WTF::StringImpl::createUninitialized.*",
      "allocator": "malloc"
    },
    {
      "name": "tc-wtf-HashTable-user-catch-all",
      "stacktrace": ".*WTF::HashTable::allocateTable.*",
      "allocator": "malloc"
    },
    {
      "name": "tc-webcore-everything-create",
      "stacktrace": ".*(WebCore|blink)::[a-zA-Z0-9_]*::create .*",
      "allocator": "malloc"
    },
    {
      "name": "tc-webkit-from-v8-catch-all",
      "stacktrace": ".*(WTF::|WebCore::|blink::|WebKit::).*v8::.*",
      "allocator": "malloc"
    },
    {
      "name": "tc-webkit-catch-all",
      "stacktrace": ".*(WTF::|WebCore::|blink::|WebKit::).*",
      "allocator": "malloc"
    },
    {
      "name": "tc-v8-catch-all",
      "stacktrace": ".*v8::.*",
      "allocator": "malloc"
    },
    {
      "name": "tc-stl-string",
      "stacktrace": ".*std::basic_string::.*",
      "allocator": "malloc"
    },
    {
      "name": "tc-stl-rbtree",
      "stacktrace": ".*std::priv::_Rb_tree::.*",
      "allocator": "malloc"
    },
    {
      "name": "tc-stl-vector",
      "stacktrace": ".*std::priv::_Impl_vector::.*",
      "allocator": "malloc"
    },
    {
      "name": "tc-stl-hashtable",
      "stacktrace": ".*std::hashtable::.*",
      "allocator": "malloc"
    },
    {
      "name": "tc-stl-other",
      "stacktrace": ".*std::__stl_new.*",
      "allocator": "malloc"
    },
    {
      "name": "tc-catch-all",
      "stacktrace": ".*",
      "allocator": "malloc"
    },
    {
      "name": "UNTIL_HERE_FOR_TOTAL",
      "stacktrace": "optional",
      "allocator": "optional"
    },
    {
      "name": "total-exclude-profiler",
      "stacktrace": "optional",
      "allocator": "optional"
    },
    {
      "name": "total",
      "stacktrace": "optional",
      "allocator": "optional"
    },
    {
      "name": "absent",
      "stacktrace": "optional",
      "allocator": "optional"
    },
    {
      "name": "anonymous",
      "stacktrace": "optional",
      "allocator": "optional"
    },
    {
      "name": "file-exec",
      "stacktrace": "optional",
      "allocator": "optional"
    },
    {
      "name": "file-nonexec",
      "stacktrace": "optional",
      "allocator": "optional"
    },
    {
      "name": "stack",
      "stacktrace": "optional",
      "allocator": "optional"
    },
    {
      "name": "other",
      "stacktrace": "optional",
      "allocator": "optional"
    }
  ],
  "version": "POLICY_DEEP_3"
}
